^D++ dirname ../../job.sh
+ SCRIPT_DIR=../..
+ ../../generate.sh
+++ dirname ../../generate.sh
++ SCRIPT_DIR=../..
++ source ../../vars.sh
+++ set -eux
++++ dirname ../../vars.sh
+++ SCRIPT_DIR=../..
+++ source ../../../vars.sh
++++ set -eux
+++++ csmith release csmith
+++++ local build=release
+++++ local program=csmith
+++++ echo /Users/jryans/Projects/csmith/build-release/src/csmith
++++ CSMITH=/Users/jryans/Projects/csmith/build-release/src/csmith
++++ SRC_FILE=example.c
+++++ llvm release-clang-lldb-13.0.0 clang
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=clang
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
++++ CLANG=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
+++++ llvm release-clang-lldb-13.0.0 llvm-as
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=llvm-as
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ LLVM_AS=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ CC_COMMON_OPTS='-I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone'
++++ CC_IR_OPTS='-S -emit-llvm'
++++ CC_CG_IR_OPTS='-S -w -mllvm -print-after=codegenprepare -mllvm -print-module-scope'
++++ CC_O0_OPTS=
++++ CC_O1_OPTS=-O1
++++ CC_LINK_OPTS='-D CONCRETE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -Xlinker -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
+++++ klee debug print-module
+++++ local build=debug
+++++ local program=print-module
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/print-module
++++ PRINT_MODULE=/Users/jryans/Projects/klee/build-debug/bin/print-module
+++++ klee release klee
+++++ local build=release
+++++ local program=klee
+++++ echo /Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE=/Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE_COMMON_OPTS='--output-module --use-query-log=all:kquery,solver:kquery --debug-execution-trace --max-forks=4'
++++ O0_BC=klee-out-O0/final.bc
++++ O1_BC=klee-out-O1/final.bc
++++ O1_FIXED_BC=klee-out-O1-fixed/final.bc
++++ O2_BC=klee-out-O2/final.bc
++++ O2_FIXED_BC=klee-out-O2-fixed/final.bc
+++++ klee debug debug-info-check
+++++ local build=debug
+++++ local program=debug-info-check
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK=/Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK_OPTS='--debug-only=debug-info-check,independent-function,values-collector,variable --debug-execution-trace'
++ /Users/jryans/Projects/csmith/build-release/src/csmith --no-argc --no-checksum --no-float --max-block-depth 2 --max-block-size 2 --max-expr-complexity 4 --max-funcs 2 --no-safe-math --no-builtins --no-force-globals-static
++ replace --silent '\"csmith.h\"' '<stdint.h>' example.c
++ replace --silent '^.*platform_main.*$' '' example.c
+ ../../build.sh
+++ dirname ../../build.sh
++ SCRIPT_DIR=../..
++ source ../../vars.sh
+++ set -eux
++++ dirname ../../vars.sh
+++ SCRIPT_DIR=../..
+++ source ../../../vars.sh
++++ set -eux
+++++ csmith release csmith
+++++ local build=release
+++++ local program=csmith
+++++ echo /Users/jryans/Projects/csmith/build-release/src/csmith
++++ CSMITH=/Users/jryans/Projects/csmith/build-release/src/csmith
++++ SRC_FILE=example.c
+++++ llvm release-clang-lldb-13.0.0 clang
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=clang
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
++++ CLANG=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
+++++ llvm release-clang-lldb-13.0.0 llvm-as
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=llvm-as
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ LLVM_AS=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ CC_COMMON_OPTS='-I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone'
++++ CC_IR_OPTS='-S -emit-llvm'
++++ CC_CG_IR_OPTS='-S -w -mllvm -print-after=codegenprepare -mllvm -print-module-scope'
++++ CC_O0_OPTS=
++++ CC_O1_OPTS=-O1
++++ CC_LINK_OPTS='-D CONCRETE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -Xlinker -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
+++++ klee debug print-module
+++++ local build=debug
+++++ local program=print-module
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/print-module
++++ PRINT_MODULE=/Users/jryans/Projects/klee/build-debug/bin/print-module
+++++ klee release klee
+++++ local build=release
+++++ local program=klee
+++++ echo /Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE=/Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE_COMMON_OPTS='--output-module --use-query-log=all:kquery,solver:kquery --debug-execution-trace --max-forks=4'
++++ O0_BC=klee-out-O0/final.bc
++++ O1_BC=klee-out-O1/final.bc
++++ O1_FIXED_BC=klee-out-O1-fixed/final.bc
++++ O2_BC=klee-out-O2/final.bc
++++ O2_FIXED_BC=klee-out-O2-fixed/final.bc
+++++ klee debug debug-info-check
+++++ local build=debug
+++++ local program=debug-info-check
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK=/Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK_OPTS='--debug-only=debug-info-check,independent-function,values-collector,variable --debug-execution-trace'
++ mkdir -p klee-out-O0
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang example.c -I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone -S -emit-llvm -o example-O0.ll
[1mexample.c:51:32: [0m[0;1;35mwarning: [0m[1mequality comparison with extraneous parentheses [-Wparentheses-equality][0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                           ~~~~^~~~~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0mremove extraneous parentheses around the comparison to silence this warning[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                          ~    ^    ~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0muse '=' to turn this equality comparison into an assignment[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                               ^~
[0m[0;32m                               =
[0m[1mexample.c:57:32: [0m[0;1;35mwarning: [0m[1mexpression result unused [-Wunused-value][0m
    (*l_38) = (((uint8_t)0x51L << (uint8_t)((((uint16_t)func_17(l_23, l_24, l_24, l_25, &g_5) + (uint16_t)65534UL) | 0x9A2F725DL) | g_37)) , l_25);
[0;1;32m                ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m2 warnings generated.
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as -o klee-out-O0/final.bc example-O0.ll
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang example.c -I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone -S -emit-llvm -O1 -o example-O1.ll
[1mexample.c:51:32: [0m[0;1;35mwarning: [0m[1mequality comparison with extraneous parentheses [-Wparentheses-equality][0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                           ~~~~^~~~~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0mremove extraneous parentheses around the comparison to silence this warning[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                          ~    ^    ~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0muse '=' to turn this equality comparison into an assignment[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                               ^~
[0m[0;32m                               =
[0m[1mexample.c:57:32: [0m[0;1;35mwarning: [0m[1mexpression result unused [-Wunused-value][0m
    (*l_38) = (((uint8_t)0x51L << (uint8_t)((((uint16_t)func_17(l_23, l_24, l_24, l_25, &g_5) + (uint16_t)65534UL) | 0x9A2F725DL) | g_37)) , l_25);
[0;1;32m                ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m2 warnings generated.
++ mkdir -p klee-out-O1
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang example.c -I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone -S -w -mllvm -print-after=codegenprepare -mllvm -print-module-scope -O1 -o /dev/null
++ filter_cg_ir example-O1-cg-raw.ll example-O1-cg.ll
++ local input_ir=example-O1-cg-raw.ll
++ local output_ir=example-O1-cg.ll
++ grep -v '^+'
++ sed '2,/IR Dump/!d'
++ grep -v 'IR Dump'
++ rm example-O1-cg-raw.ll
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as -o klee-out-O1/final.bc example-O1-cg.ll
++ /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang example.c -I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone -O1 -D CONCRETE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -Xlinker -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -o example-O1
[1mexample.c:51:32: [0m[0;1;35mwarning: [0m[1mequality comparison with extraneous parentheses [-Wparentheses-equality][0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                           ~~~~^~~~~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0mremove extraneous parentheses around the comparison to silence this warning[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                          ~    ^    ~
[0m[1mexample.c:51:32: [0m[0;1;30mnote: [0muse '=' to turn this equality comparison into an assignment[0m
        for (g_8 = (-26); (g_8 == 12); g_8 += 3)
[0;1;32m                               ^~
[0m[0;32m                               =
[0m[1mexample.c:57:32: [0m[0;1;35mwarning: [0m[1mexpression result unused [-Wunused-value][0m
    (*l_38) = (((uint8_t)0x51L << (uint8_t)((((uint16_t)func_17(l_23, l_24, l_24, l_25, &g_5) + (uint16_t)65534UL) | 0x9A2F725DL) | g_37)) , l_25);
[0;1;32m                ~~~~~~~~~~~~~~ ^  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[0m2 warnings generated.
+ ../../check.sh
+++ dirname ../../check.sh
++ SCRIPT_DIR=../..
++ source ../../vars.sh
+++ set -eux
++++ dirname ../../vars.sh
+++ SCRIPT_DIR=../..
+++ source ../../../vars.sh
++++ set -eux
+++++ csmith release csmith
+++++ local build=release
+++++ local program=csmith
+++++ echo /Users/jryans/Projects/csmith/build-release/src/csmith
++++ CSMITH=/Users/jryans/Projects/csmith/build-release/src/csmith
++++ SRC_FILE=example.c
+++++ llvm release-clang-lldb-13.0.0 clang
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=clang
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
++++ CLANG=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/clang
+++++ llvm release-clang-lldb-13.0.0 llvm-as
+++++ local build=release-clang-lldb-13.0.0
+++++ local program=llvm-as
+++++ echo /Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ LLVM_AS=/Users/jryans/Projects/LLVM/llvm/build-release-clang-lldb-13.0.0/bin/llvm-as
++++ CC_COMMON_OPTS='-I /Users/jryans/Projects/klee/include -g -fno-inline -fno-discard-value-names -Xclang -disable-O0-optnone'
++++ CC_IR_OPTS='-S -emit-llvm'
++++ CC_CG_IR_OPTS='-S -w -mllvm -print-after=codegenprepare -mllvm -print-module-scope'
++++ CC_O0_OPTS=
++++ CC_O1_OPTS=-O1
++++ CC_LINK_OPTS='-D CONCRETE -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk -Xlinker -syslibroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk'
+++++ klee debug print-module
+++++ local build=debug
+++++ local program=print-module
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/print-module
++++ PRINT_MODULE=/Users/jryans/Projects/klee/build-debug/bin/print-module
+++++ klee release klee
+++++ local build=release
+++++ local program=klee
+++++ echo /Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE=/Users/jryans/Projects/klee/build-release/bin/klee
++++ KLEE_COMMON_OPTS='--output-module --use-query-log=all:kquery,solver:kquery --debug-execution-trace --max-forks=4'
++++ O0_BC=klee-out-O0/final.bc
++++ O1_BC=klee-out-O1/final.bc
++++ O1_FIXED_BC=klee-out-O1-fixed/final.bc
++++ O2_BC=klee-out-O2/final.bc
++++ O2_FIXED_BC=klee-out-O2-fixed/final.bc
+++++ klee debug debug-info-check
+++++ local build=debug
+++++ local program=debug-info-check
+++++ echo /Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK=/Users/jryans/Projects/klee/build-debug/bin/debug-info-check
++++ CHECK_OPTS='--debug-only=debug-info-check,independent-function,values-collector,variable --debug-execution-trace'
++ /Users/jryans/Projects/klee/build-debug/bin/debug-info-check klee-out-O0/final.bc klee-out-O1/final.bc --debug-only=debug-info-check,independent-function,values-collector,variable --debug-execution-trace
Checking klee-out-O0/final.bc and klee-out-O1/final.bc for debug info consistency…

## Functions

✅ 2 before defined functions(s), 2 after defined functions(s)

## Function `func_1`

✅ Before and after function names match

### Variables

Before variable `l_11` (decl src line 43)
Store to `l_11` (decl src line 43), asm line 29
  const i16 1
  Added assignment starting at src line 43, column 13
Before variable `l_23` (decl src line 44)
Store to `l_23` (decl src line 44), asm line 31
  const i32 346269399
  Added assignment starting at src line 44, column 14
Before variable `l_24` (decl src line 45)
Store to `l_24` (decl src line 45), asm line 33
  const i32* null
  Added assignment starting at src line 45, column 14
Before variable `l_25` (decl src line 46)
Store to `l_25` (decl src line 46), asm line 35
  const i32* null
  Added assignment starting at src line 46, column 14
Before variable `l_38` (decl src line 47)
Store to `l_38` (decl src line 47), asm line 37
  %l_24 = alloca i32*, asm line 24
  Added assignment starting at src line 47, column 15
Before variable `l_12` (decl src line 50)
Store to `l_12` (decl src line 50), asm line 48
  global g_8
  Added assignment starting at src line 50, column 18

After variable `l_11` (decl src line 43)
@dbg.value mapping for `l_11` (decl src line 43), asm line 21
Value produced for `l_11` (decl src line 43), asm line 21
  const i16 1
  Added assignment starting at src line 43, column 0
After variable `l_23` (decl src line 44)
@dbg.value mapping for `l_23` (decl src line 44), asm line 22
Value produced for `l_23` (decl src line 44), asm line 22
  const i32 346269399
  Added assignment starting at src line 44, column 0
After variable `l_24` (decl src line 45)
@dbg.value mapping for `l_24` (decl src line 45), asm line 23
Value produced for `l_24` (decl src line 45), asm line 23
  const i32* null
  Added assignment starting at src line 45, column 0
After variable `l_25` (decl src line 46)
@dbg.value mapping for `l_25` (decl src line 46), asm line 24
Value produced for `l_25` (decl src line 46), asm line 24
  const i32* null
  Added assignment starting at src line 46, column 0
After variable `l_38` (decl src line 47)
After variable intrinsic with undef input, asm line 25, ignoring undefined variable
  @dbg.value(i32** undef, !69)
After variable `l_12` (decl src line 50)
@dbg.value mapping for `l_12` (decl src line 50), asm line 32
Value produced for `l_12` (decl src line 50), asm line 32
  global g_8
  Added assignment starting at src line 50, column 0
After variable `l_24` (decl src line 45)
@dbg.value mapping for `l_24` (decl src line 45), asm line 42
Value produced for `l_24` (decl src line 45), asm line 42
  const i32* null
  Value is same as last assignment, skipping

✅ 6 before variables found, 6 after variables found, 0 mismatched

### Assignments

❌ After live ranges for `l_38` (decl src line 47) not found
❌ 5 before live ranges covered, 1 uncovered, 0 undefined

### Symbolic values

#### Before values

Collected value for `l_11`
i16 1
0x1
Collected value for `l_23`
i32 346269399
0x14A3A6D7
Collected value for `l_24`
i32* null
0x0
Collected value for `l_25`
i32* null
0x0
Concrete pointer resolves to l_24, offset 0x0
Replaced concrete pointer with hash 0x86B343C868706B6B
Collected value for `l_38`
%l_24 = alloca i32*
0x86B343C868706B6B
Concrete pointer resolves to g_8, offset 0x0
Replaced concrete pointer with hash 0x637480294135CF34
Collected value for `l_12`
@g_8 = global i32 -9, align 4, !dbg !28
0x637480294135CF34
Assertion failed: (!arg->getType()->isPointerTy() && "Function to skip has pointer argument"), function executeCall, file Executor.cpp, line 2079.
PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace.
Stack dump:
0.	Program arguments: /Users/jryans/Projects/klee/build-debug/bin/debug-info-check klee-out-O0/final.bc klee-out-O1/final.bc --debug-only=debug-info-check,independent-function,values-collector,variable --debug-execution-trace
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  debug-info-check         0x00000001095ad9d7 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 39
1  debug-info-check         0x00000001095ac818 llvm::sys::RunSignalHandlers() + 248
2  debug-info-check         0x00000001095ae020 SignalHandler(int) + 288
3  libsystem_platform.dylib 0x00007ff81a86ec1d _sigtramp + 29
4  debug-info-check         0x0000000107b842e5 klee::ref<klee::UpdateNode>::~ref() + 21
5  libsystem_c.dylib        0x00007ff81a78dca5 abort + 123
6  libsystem_c.dylib        0x00007ff81a78cfbe err + 0
7  debug-info-check         0x0000000107b5e45b klee::Executor::executeCall(klee::ExecutionState&, klee::KInstruction*, llvm::Function*, std::__1::vector<klee::ref<klee::Expr>, std::__1::allocator<klee::ref<klee::Expr> > >&) + 8283
8  debug-info-check         0x0000000107b64efd klee::Executor::executeInstruction(klee::ExecutionState&, klee::KInstruction*) + 8685
9  debug-info-check         0x0000000107b71014 klee::Executor::run(klee::ExecutionState&) + 1860
10 debug-info-check         0x0000000107b75c9d klee::Executor::runFunction(llvm::Function*) + 205
11 debug-info-check         0x0000000107b1e12a collectValues(llvm::StringRef, std::__1::unique_ptr<llvm::Module, std::__1::default_delete<llvm::Module> >, llvm::StringRef, llvm::StringRef, llvm::SmallVector<std::__1::pair<Variable, Assignment*>, 1u>&) + 1338
12 debug-info-check         0x0000000107af454b checkFunction(llvm::LLVMContext&, llvm::StringRef, llvm::StringRef) + 4203
13 debug-info-check         0x0000000107af5828 main + 1112
14 dyld                     0x00007ff81a511310 start + 2432
../../check.sh: line 6: 26425 Abort trap: 6           ${CHECK} ${O0_BC} ${O1_BC} ${CHECK_OPTS}
